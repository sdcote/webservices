# Continuous Integration (CI) build and publish to GCP Artifact Registry

name: Build

on:
  workflow_dispatch:
#  push:
#    branches:
#    - main

jobs:
  build:
    runs-on: [ubuntu-latest]
    
    permissions:
      contents: read
      id-token: write # Required for Google Workload Identity Federation

    outputs:
      # Output the artifact and the version so they can be passed to the deploy workflow
      built_version: ${{ env.JOB_OUTPUT_VERSION }}
      built_artifact: ${{ env.JOB_OUTPUT_ARTIFACT }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          workload_identity_provider: projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gha-pool-webservices/providers/github-sdcote-webservices
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Get Maven project artifact
        id: get-artifact
        run: |
          ARTIFACT=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "JOB_OUTPUT_ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
        working-directory: ${{ github.workspace }} # Ensure maven is run from the project root

      - name: Get Maven project version
        id: get-version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "JOB_OUTPUT_VERSION=$VERSION" >> $GITHUB_ENV # <--- ADD THIS LINE
        working-directory: ${{ github.workspace }} # Ensure maven is run from the project root

      - name: Build and push Docker image
        # The 'deploy' phase will trigger Jib to build and push
        run: mvn -B -U clean install deploy --file pom.xml
        working-directory: ${{ github.workspace }}
        env:
          # Keep this here for the actual build step's execution
          # JIB_GOOGLE_CREDENTIALS_FILE: ${{ env.GOOGLE_GHA_CREDS_PATH }} # this does not work
          # GCP_SA_KEY_CONTENT: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON_KEY_CONTENT }} # this does not work
          SPRING_PROFILES_ACTIVE: "github-actions"

      - name: Debug Build Job Outputs Before Call
        run: |
          echo "--- Build Job Outputs ---"
          echo "ARTIFACT: '${{ steps.get-artifact.outputs.ARTIFACT }}'"
          echo "VERSION: '${{ steps.get-version.outputs.VERSION }}'"
          echo "JOB_OUTPUT_ARTIFACT (from env): '${{ env.JOB_OUTPUT_ARTIFACT }}'"
          echo "JOB_OUTPUT_VERSION (from env): '${{ env.JOB_OUTPUT_VERSION }}'"
          echo "--- End Build Job Outputs ---"

  deploy:
    needs: build
    permissions:
      id-token: write # Allow the called workflow to request OIDC tokens
      contents: read  # Often needed for actions/checkout in the called workflow even if you don't explicitly checkout there, good practice.
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      artifact: ${{ needs.build.outputs.built_artifact }}
      version: ${{ needs.build.outputs.built_version }}
