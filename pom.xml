<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.sdcote</groupId>
	<artifactId>webservices</artifactId>
	<version>0.0.1</version>
	<name>WebServices</name>
	<description>This the main web API for the sdcote.com domain.</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>

	<properties>
		<java.version>17</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<surefire.version>3.5.3</surefire.version>
		<jacoco.version>0.8.13</jacoco.version>
		<spotbugs.version>4.9.3.2</spotbugs.version>
		<owasp.dependency.check.version>12.1.3</owasp.dependency.check.version>
		<site.version>4.0.0-M16</site.version>
		<pmd.version>3.27.0</pmd.version>
		<checkstyle.version>3.6.0</checkstyle.version>
		<licenses.version>2.6.0</licenses.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>5.13.3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Springdoc OpenAPI UI for Swagger -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.6.0</version> <!-- Check for the latest compatible version -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Jib Maven Plugin for Docker Image Build and Push to GCP Artifact Registry -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.4.1</version> <!-- Use the latest stable version -->
				<configuration>
					<!-- Base image for your application -->
					<from>
						<image>openjdk:21-jdk-slim</image>
					</from>
					<!-- Target image in GCP Artifact Registry -->
					<!-- IMPORTANT: Replace YOUR_GCP_PROJECT_ID, YOUR_ARTIFACT_REGISTRY_REPO, and YOUR_IMAGE_NAME -->
					<to>
						<image>us-east5-docker.pkg.dev/sdcote/docker/${project.artifactId}:${project.version}</image>
					</to>
					<!-- Optional: Define additional tags for the image -->
					<tags>
						<tag>latest</tag>
					</tags>
					<!-- Optional: Set up authentication for CI/CD if not using gcloud defaults.
					     For local development with 'gcloud auth configure-docker', this block might not be needed.
						 NOTE: Jib relies on the "GOOGLE_APPLICATION_CREDENTIALS" environment variable to point to the 
						 location of a JSON key file on the file system. Otherwise, use the "auth" section to pass the 
						 _contents_ of the JSON key file.
					     NEVER hardcode credentials here. Use environment variables. -->
					<auth>
						<username>_json_key</username>
						<password>${env.GOOGLE_BUILDER_KEY}</password>
					</auth>
				</configuration>
				<executions>
					<execution>
						<id>build-and-push-image</id>
						<phase>deploy</phase> <!-- Or 'install' if you prefer to push earlier -->
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Maven Unit Tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<configuration>
					<includes>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/*Tests.java</include>
						<include>**/*TestCase.java</include>
					</includes>
					<properties>
						<!-- To perform a limited set of tests, include: <includeTags>fast</includeTags> -->
						<excludeTags>slow</excludeTags>
					</properties>
				</configuration>
			</plugin>
			<!-- Generate reports, including test coverage and code analysis -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${site.version}</version>
			</plugin>
			<!-- Generate code coverage data during unit testing -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent-id</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report-id</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- This skips the Maven deploy so that only the Jib deploy runs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
					</configuration>
				</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<!-- SpotBugs -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs.version}</version>
				<configuration>
					<effort>Max</effort>
					<threshold>Low</threshold>
					<failOnError>false</failOnError>
					<plugins>
						<plugin>
							<groupId>com.h3xstream.findsecbugs</groupId>
							<artifactId>findsecbugs-plugin</artifactId>
							<version>LATEST</version>
						</plugin>
					</plugins>
				</configuration>
			</plugin>
			<!-- OWASP Dependency Check -->
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${owasp.dependency.check.version}</version>
				<configuration>
					<format>ALL</format>
					<versionCheckEnabled>true</versionCheckEnabled>
					<autoUpdate>true</autoUpdate>
					<failOnError>false</failOnError>
					<failBuildOnCVSS>5</failBuildOnCVSS> <!-- scores are from 0-10 so 11 never fails -->
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- Jacoco Code Coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- PMD Code Quality Scanner -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.version}</version>
				<configuration>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.8</targetJdk>
					<excludes>
						<exclude>**/*Bean.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>target/generated-sources/stubs</excludeRoot>
					</excludeRoots>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>pmd</report>
							<report>cpd</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- Checkstyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.version}</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                </configuration>
            </plugin>
			<!--  Third-party Licenses  -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${licenses.version}</version>
			</plugin>
		</plugins>
	</reporting>
	
	
</project>
